{"version":3,"sources":["0_header/Header.js","taxonomy_maps/config.js","../src sync /^/.*$","App.less","logo.svg","process_maps/create_map.py","2_select_column_page/SelectColumnPage.js","App.js","3_select_taxonomy_from_page/SelectTaxonomyFromPage.js","index.js","1_upload_page/UploadPage.js","4_select_taxonomy_to_page/SelectTaxonomyToPage.js","5_mapping_process_page/MappingProcessPage.js","registerServiceWorker.js","App.test.js"],"names":["Header","className","Component","config_json","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","SelectColumnPage","props","state","buttonReady","defaultText","nextProps","data","crisisTag","this","setState","type","length","onClick","nextStep","DataTable","handleTagChange","tableLoading","previousStep","nextButton","userData","userData2","userData3","userData4","userData5","headerParameters","tagParameters","dataParameters3","dataParameters4","dataParameters5","TableRows","parameters","obj","slice","rowStart","rowEnd","row","i","colourClassName","temp","item","j","undefined","bgColor","key","App","step","value","crisisColumnJson","mapFrom","mapTo","handleLinkChange","bind","handleMapFromChange","handleMapToChange","getUserLink","getColumnData","nextAndSave","nextAndGetColumn","event","target","console","log","url","encodeURIComponent","userLink","createHXLLink","Promise","reject","xhr","XMLHttpRequest","open","responseType","onload","status","response","send","then","alert","column","index","indexOf","forEach","c","push","replace","l","toUpperCase","link","showStep","SelectTaxonomyFromPage","taxButtons","tax","TaxButtonElement","selectedBtn","text","name","handleMapChange","classNames","ReactDOM","render","document","getElementById","registerServiceWorker","UploadPage","active","showText","input","focus","select","prevState","Instructions","handleClick","FormInput","onChange","href","SelectTaxonomyToPage","MapProcessPage","finishedProcessing","currentWordFrom","currentArrayTo","newColumn","taxonomyLevelOfTerm","dataInNeedOfProcessing","nextWordHandler","dataObject","processData","word","match","wordArray","tempArray","taxonomyLevelTo","substr","concat","AskUserInput","createTable","combineArrays","dataToCheckInHigherTaxonomy","results","searchTermInTaxonomy","taxonomyLevelFrom","config","taxonomyMap","createMap","array2","array3","combinedArray","array","cell","showProcessingState","_config","tax1","tax2","_tax1","_tax2","parent","_dataLoaded","init","taxonomy","tax1Call","_loadTaxonomy","tax2Call","group","_createMap","map1","map2","subTerm","baseTerms","subTerms2","_getSubTermsFromBaseTerms","subTerms","subTerm2","baseTerms2","_compareArrays","arr1","arr2","some","v","require","allDOMElements","createList","wordList","listOfChoices","dataHeaders","currentRow","style","display","transition","DisplayWordThatNeedsInput","isLocalhost","Boolean","window","location","hostname","register","navigator","URL","process","origin","addEventListener","swUrl","fetch","headers","get","serviceWorker","ready","registration","unregister","reload","registerValidSW","catch","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","error","it","div","createElement","setAttribute"],"mappings":"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","file":"static/js/main.88954dbb.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n//import ReactDOM from 'react-dom';\r\nimport '../App.css';\r\n\r\nclass Header extends Component {\r\n\r\n    render(){\r\n        return (\r\n\t\t\t<h2 className=\"flex-row title\">Disaster Taxonomies</h2>\r\n\t\t);\r\n    }\r\n}\r\n\r\nexport default Header;\r\n\r\n","let config_json = \r\n[{\"group\": \"IFRC\", \"name\": \"disaster_IFRC1\", \"level\": \"1\", \"url\": \"taxonomy_maps/disaster_IFRC1_base.json\", \"urlOnline\": \"https://docs.google.com/spreadsheets/d/1ulGIFJIdwkOcBo2eAaQZ9-35mHY7XE0hrDufnMbL2fA/edit#gid=1143895699\", \"type\": \"disaster\"}, {\"group\": \"IFRC\", \"name\": \"disaster_IFRC2\", \"level\": \"2\", \"url\": \"taxonomy_maps/disaster_IFRC2_base.json\", \"urlOnline\": \"https://docs.google.com/spreadsheets/d/1ulGIFJIdwkOcBo2eAaQZ9-35mHY7XE0hrDufnMbL2fA/edit#gid=125202705\", \"type\": \"disaster\"}, {\"group\": \"IFRC\", \"name\": \"disaster_IFRC3\", \"level\": \"3\", \"url\": \"taxonomy_maps/disaster_IFRC3_base.json\", \"urlOnline\": \"https://docs.google.com/spreadsheets/d/1ulGIFJIdwkOcBo2eAaQZ9-35mHY7XE0hrDufnMbL2fA/edit#gid=1879432315\", \"type\": \"disaster\"}, {\"group\": \"IFRC\", \"name\": \"disaster_IFRC4\", \"level\": \"4\", \"url\": \"taxonomy_maps/disaster_IFRC4_base.json\", \"urlOnline\": \"https://docs.google.com/spreadsheets/d/1ulGIFJIdwkOcBo2eAaQZ9-35mHY7XE0hrDufnMbL2fA/edit#gid=1174429856\", \"type\": \"disaster\"}, {\"group\": \"GLIDE\", \"name\": \"disaster_GLIDE1\", \"level\": \"1\", \"url\": \"taxonomy_maps/disaster_GLIDE1_base.json\", \"urlOnline\": \"https://docs.google.com/spreadsheets/d/1ulGIFJIdwkOcBo2eAaQZ9-35mHY7XE0hrDufnMbL2fA/edit#gid=1971172407\", \"type\": \"disaster\"}];\r\nexport default config_json;","var map = {\n\t\"./\": 34,\n\t\"./0_header/Header\": 12,\n\t\"./0_header/Header.js\": 12,\n\t\"./1_upload_page/UploadPage\": 41,\n\t\"./1_upload_page/UploadPage.js\": 41,\n\t\"./2_select_column_page/SelectColumnPage\": 21,\n\t\"./2_select_column_page/SelectColumnPage.js\": 21,\n\t\"./3_select_taxonomy_from_page/SelectTaxonomyFromPage\": 28,\n\t\"./3_select_taxonomy_from_page/SelectTaxonomyFromPage.js\": 28,\n\t\"./4_select_taxonomy_to_page/SelectTaxonomyToPage\": 42,\n\t\"./4_select_taxonomy_to_page/SelectTaxonomyToPage.js\": 42,\n\t\"./5_mapping_process_page/MappingProcessPage\": 43,\n\t\"./5_mapping_process_page/MappingProcessPage.js\": 43,\n\t\"./App\": 27,\n\t\"./App.css\": 18,\n\t\"./App.js\": 27,\n\t\"./App.less\": 196,\n\t\"./App.min.css\": 197,\n\t\"./App.test\": 95,\n\t\"./App.test.js\": 95,\n\t\"./index\": 34,\n\t\"./index.css\": 94,\n\t\"./index.js\": 34,\n\t\"./logo.svg\": 198,\n\t\"./process_maps/create_map.py\": 199,\n\t\"./registerServiceWorker\": 44,\n\t\"./registerServiceWorker.js\": 44,\n\t\"./taxonomy_maps/config\": 19,\n\t\"./taxonomy_maps/config.js\": 19,\n\t\"./taxonomy_maps/disaster_GLIDE1_base\": 96,\n\t\"./taxonomy_maps/disaster_GLIDE1_base.json\": 96,\n\t\"./taxonomy_maps/disaster_IFRC1_base\": 97,\n\t\"./taxonomy_maps/disaster_IFRC1_base.json\": 97,\n\t\"./taxonomy_maps/disaster_IFRC2_base\": 98,\n\t\"./taxonomy_maps/disaster_IFRC2_base.json\": 98,\n\t\"./taxonomy_maps/disaster_IFRC3_base\": 99,\n\t\"./taxonomy_maps/disaster_IFRC3_base.json\": 99,\n\t\"./taxonomy_maps/disaster_IFRC4_base\": 100,\n\t\"./taxonomy_maps/disaster_IFRC4_base.json\": 100\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 195;","module.exports = __webpack_public_path__ + \"static/media/App.dafa1afe.less\";","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","module.exports = __webpack_public_path__ + \"static/media/create_map.76562cd4.py\";","import React, { Component } from 'react';\r\n//import ReactDOM from 'react-dom';\r\nimport Header from '../0_header/Header';\r\nimport '../App.css';\r\n\r\n\r\n/*--------------------------------------------------------------------------------*/\r\n\r\n/*                           SELECT COLUMN PAGE                               */\r\n\r\n/*--------------------------------------------------------------------------------*/\r\n\r\n\r\n\r\nclass SelectColumnPage extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            buttonReady: 'no',\r\n\t\t\tdefaultText: ' - Please select a column above'\r\n        };\r\n    }\r\n\r\n    //When new data is loaded un-grey the button\r\n    componentWillReceiveProps(nextProps){\r\n\t//nextProps.data !== this.props.data && \r\n        if (nextProps.data !== null && nextProps.crisisTag !== this.state.defaultText) {\r\n            this.setState({buttonReady: 'yes'});\r\n        } if (nextProps.data === null) {\r\n            this.setState({buttonReady: 'no'});\r\n        }\r\n    }\r\n\r\n    //If user goes from next page back to this page and data is already loaded, un-grey the button\r\n    componentDidMount(){\r\n        const data = this.props.data;\r\n\r\n        if (data !== null && data.type !== \"tr\" && Object.keys(data).length !== 0 && this.props.crisisTag !== this.state.defaultText) {\r\n            this.setState({buttonReady: 'yes'});\r\n        }\r\n    }\r\n\r\n    //Function checks whether the data is loaded and if not the button stays greyed out\r\n    nextButton(){\r\n        if (this.state.buttonReady !== 'yes') {\r\n            return (<div className=\"NavButtonGreyed\">Next</div>);\r\n        } else {\r\n            return (<div className=\"NavButton\" onClick={this.props.nextStep()}>Next</div>);\r\n        }\r\n    }\r\n\r\ntableLoading(){\r\n\r\n            if (this.state.buttonReady !== 'yes' && this.props.data === null) {\r\n                return(<div className=\"waiting\">No data found, please check your link is a JSON file.</div>);\r\n            } \r\n            if (this.state.buttonReady !== 'yes' && this.props.data.type === \"tr\" ) {\r\n                return(this.props.data);\r\n            } \r\n            else {\r\n            return (<div className=\"flex-row\">\r\n                    <DataTable data={this.props.data} handleTagChange={this.props.handleTagChange} crisisTag={this.props.crisisTag}/>\r\n                    </div>);\r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n        return (<div className=\"flex-page\">\r\n                    <Header />\r\n                    <div className=\"flex-row\">\r\n                        <div>Please select the <b>#crisis</b> column you wish to map:</div>\r\n                    </div> \r\n                        {this.tableLoading()}\r\n                    <div className=\"flex-row\">\r\n                       <span>You have selected &nbsp;</span><b>{this.props.crisisTag}</b>.\r\n                    </div>\r\n                    <div className=\"flex-row\">\r\n                         <div className=\"NavButton\" onClick={this.props.previousStep()}>Back</div>\r\n                         {this.nextButton()}\r\n                    </div>\r\n                </div>);\r\n    }\r\n}\r\n\r\n\r\n/*--------------------------------------------------------------------------------*/\r\n\r\n/*                           DATA-TABLE                                            */\r\n\r\n/*--------------------------------------------------------------------------------*/\r\n\r\n\r\nclass DataTable extends Component {\r\n\r\n        constructor(props){\r\n            super(props);\r\n            this.state =  {data: this.props.data};\r\n        }\r\n\r\n        componentWillReceiveProps(nextProps){\r\n            this.setState({data:nextProps.data});\r\n        }\r\n\r\n\r\n    render(){\r\n\r\n        let userData = this.state.data;\r\n        let userData2 = \"\";\r\n        let userData3 = \"\";\r\n        let userData4 = \"\";\r\n        let userData5 = \"\";\r\n\r\n        //Checks that this.state.data is not \"<tr>Loading</tr>\"\r\n        if (userData !== null && userData.type !== \"tr\" && Object.keys(userData).length !== 0) {\r\n\r\n\r\n            const headerParameters = {\r\n                'data': userData,\r\n                'rowStart': 0,\r\n                'rowEnd': 1,\r\n                'className': \"\"\r\n            };\r\n            const tagParameters = {\r\n                'data': userData,\r\n                'rowStart': 1,\r\n                'rowEnd': 2,\r\n                'className': 'clickable-cell'\r\n            };\r\n            const dataParameters3 = {\r\n                'data': userData,\r\n                'rowStart': 2,\r\n                'rowEnd': 3,\r\n                'className': \"\"\r\n            };\r\n            const dataParameters4 = {\r\n                'data': userData,\r\n                'rowStart': 3,\r\n                'rowEnd': 4,\r\n                'className': \"\"\r\n            };\r\n            const dataParameters5 = {\r\n                'data': userData,\r\n                'rowStart': 4,\r\n                'rowEnd': 5,\r\n                'className': \"\"\r\n            };\r\n\r\n            userData = <TableRows parameters={headerParameters} handleTagChange={function(){return;}} />;\r\n            userData2 = <TableRows parameters={tagParameters} handleTagChange={this.props.handleTagChange} crisisTag={this.props.crisisTag} />;\r\n            userData3 = <TableRows parameters={dataParameters3} handleTagChange={function(){return;}} />;\r\n            userData4 = <TableRows parameters={dataParameters4} handleTagChange={function(){return;}} />;\r\n            userData5 = <TableRows parameters={dataParameters5} handleTagChange={function(){return;}} />;\r\n        } //end if\r\n\r\n        return(\r\n            <table className=\"scrollable-table\">\r\n                <tbody>\r\n                    {userData}\r\n                    {userData2}\r\n                    {userData3}\r\n                    {userData4}\r\n                    {userData5}\r\n                </tbody>\r\n            </table>\r\n            );\r\n    }\r\n}\r\n\r\n\r\n\r\n/*--------------------------------------------------------------------------------*/\r\n\r\n/*                           TABLE ROWS                                            */\r\n\r\n/*--------------------------------------------------------------------------------*/\r\n\r\n\r\n// Parameter Object should contain: data, start and end of rows, and className to be processed\r\n// e.g.: parseData({data:data, rowStart:0, rowEnd:10, className: \"clickable-button\"})\r\n\r\nexport class TableRows extends Component {\r\n       \r\n    render(){\r\n\r\n        let obj = this.props.parameters;\r\n        obj.data = obj.data.slice(obj.rowStart, obj.rowEnd); //selecting data from lines\r\n\r\n        let finalTable =\r\n        obj.data.map( function(row, i){\r\n            let colourClassName;\r\n            const temp = row.map(function(item, j){ \r\n\r\n                //Colour management\r\n                if (this.props.crisisTag !== null && this.props.crisisTag !== undefined) {\r\n                    let bgColor = (this.props.crisisTag === item) ? 'colorOn': 'colorOff';\r\n                    colourClassName = obj.className +' '+ bgColor;\r\n                }\r\n                return (<td key={j} id={item} className={colourClassName || obj.className} onClick={this.props.handleTagChange} >{item}</td>);\r\n            \r\n            }, this);\r\n            return (<tr key={i}>{temp}</tr>);\r\n\r\n            }, this)[0];  //Need the 0....\r\n\r\n            return (finalTable);\r\n        }\r\n    }\r\n\r\n\r\nexport default SelectColumnPage;","import React, { Component }  from 'react';\r\nimport './App.css';\r\nimport UploadPage from './1_upload_page/UploadPage';\r\nimport SelectColumnPage from './2_select_column_page/SelectColumnPage';\r\nimport SelectTaxonomyFromPage from './3_select_taxonomy_from_page/SelectTaxonomyFromPage';\r\nimport SelectTaxonomyToPage from './4_select_taxonomy_to_page/SelectTaxonomyToPage';\r\nimport MapProcessPage from './5_mapping_process_page/MappingProcessPage';\r\n\r\n\r\n//GLOBAL VARIABLES\r\n\r\nclass App extends Component {\r\n\r\n    // ------------------ CONSTRUCTOR ---------------------------\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            step: 1,\r\n            value: \"https://docs.google.com/spreadsheets/d/1YxeSuB2FLOMjNkj4iH_4fwELqSar2FbBPgjd4u0hqQA/edit#gid=0\",\r\n            data: <tr><td className=\"waiting\">Loading<span className=\"loading-animation\">...</span></td></tr>,\r\n            crisisTag: \" - Please select a column above\",\r\n            crisisColumnJson: \"\",\r\n            mapFrom: \"disaster_IFRC1\",\r\n            mapTo: \"disaster_IFRC1\"\r\n        };\r\n\r\n        //List of all functions in the App Class using \"this\"\r\n        this.handleLinkChange = this.handleLinkChange.bind(this);\r\n        this.handleTagChange = this.handleTagChange.bind(this);\r\n        this.handleMapFromChange = this.handleMapFromChange.bind(this);\r\n        this.handleMapToChange = this.handleMapToChange.bind(this);\r\n        this.getUserLink = this.getUserLink.bind(this);\r\n        this.getColumnData = this.getColumnData.bind(this);\r\n        this.nextAndSave = this.nextAndSave.bind(this);\r\n        this.nextAndGetColumn = this.nextAndGetColumn.bind(this);\r\n        this.previousStep = this.previousStep.bind(this);\r\n        this.nextStep = this.nextStep.bind(this);\r\n    }\r\n\r\n\r\n    // ------------------ FUNCTIONS ---------------------------\r\n\r\n    handleLinkChange(event) {\r\n        this.setState({value: event.target.value});\r\n    }\r\n\r\n    handleTagChange(event) {\r\n        this.setState({crisisTag: event.target.id});\r\n    }\r\n\r\n    handleMapFromChange(event) {\r\n        this.setState({mapFrom: event.target.id}, function() {\r\n            console.log(this.state.mapFrom);\r\n        });\r\n    }\r\n\r\n    handleMapToChange(event) {\r\n        this.setState({mapTo: event.target.id}, function() {\r\n            console.log(this.state.mapTo);\r\n        });\r\n    }\r\n\r\n\tcreateHXLLink(url){\r\n\t\treturn \"https://proxy.hxlstandard.org/data.json?&url=\" + encodeURIComponent(url) + \"&force=on\";\r\n\t}\r\n\r\n    //ajax request to get json data\r\n    getUserLink(event) {\r\n\r\n        var userLink = this.createHXLLink(this.state.value);\r\n\r\n        let getJSON = function(url) {\r\n            return new Promise(function(resolve, reject) {\r\n                var xhr = new XMLHttpRequest();\r\n                xhr.open('get', url, true);\r\n                xhr.responseType = 'json';\r\n                xhr.onload = function() {\r\n                    var status = xhr.status;\r\n                    if (status === 200) {\r\n                        resolve(xhr.response);\r\n                    } else {\r\n                        reject(status);\r\n                    }\r\n                };\r\n                xhr.send();\r\n            });\r\n        };\r\n\r\n        getJSON(userLink).then(function(userData) {\r\n            this.setState({data:userData});\r\n        }.bind(this), function(status) { //error detection....\r\n            alert('Something went wrong. Please make sure your spreadsheet is public to everyone on the internet.');\r\n            this.setState({data:null});\r\n        }.bind(this)\r\n    );\r\n    }\r\n\r\n\r\n    // gets column that user wants to convert from dataset \r\n    getColumnData(event) {\r\n        let data = this.state.data;\r\n        let crisisTag = this.state.crisisTag;\r\n        let column = [];\r\n        let index = data[1].indexOf(crisisTag);\r\n\r\n        data.forEach(function(c, i){\r\n\t\t\tif(i===1){\r\n\t\t\t//do nothing\r\n\t\t\tcolumn.push(c[index]);\r\n\t\t\t} else {\r\n            //to capital case\r\n            column.push(c[index].replace(/\\b\\w/g, function(l){ return l.toUpperCase() }));\r\n\t\t\t}\r\n        });\r\n\r\n        this.setState({crisisColumnJson: column});\r\n    }\r\n\r\n\r\n    // function to set how to get to next page (or next state)\r\n    nextStep() {\r\n        this.setState({\r\n            step : this.state.step + 1\r\n        })\r\n    }\r\n\r\n    // Same as nextStep, but decrementing\r\n    previousStep() {\r\n        this.setState({\r\n            step : this.state.step - 1\r\n        })\r\n    }\r\n\r\n    // Same as nextStep but also saves the user data as state\r\n    nextAndSave(){\r\n        this.nextStep();\r\n        this.getUserLink();\r\n    }\r\n\r\n    // Same as nextStep but also gets data for column to be processed\r\n    nextAndGetColumn(){\r\n        this.nextStep();\r\n        this.getColumnData();\r\n    }\r\n\r\n\r\n    //----------------- function to show content of page -----------------\r\n\r\n    showStep() {\r\n        switch (this.state.step){\r\n\r\n            /*---------------------- PAGE 1 --------------------------*/\r\n            case 1: \r\n                return (\r\n                    <UploadPage \r\n                        nextAndSave={this.nextAndSave} \r\n                        handleLinkChange={this.handleLinkChange} \r\n                        link={this.state.value} \r\n                        getUserLink = {this.getUserLink} \r\n                     />);\r\n\r\n        /*---------------------- PAGE 2 ---------------------------*/\r\n            case 2:\r\n                return (<SelectColumnPage \r\n                            previousStep={() => this.previousStep}\r\n                            handleTagChange = {this.handleTagChange}\r\n                            data = {this.state.data}\r\n                            crisisTag = {this.state.crisisTag}\r\n                            nextStep={() => this.nextAndGetColumn}\r\n                        />);\r\n\r\n    /*---------------------- PAGE 3 ---------------------------*/ \r\n            case 3:\r\n                return (<SelectTaxonomyFromPage \r\n                            previousStep={() => this.previousStep}\r\n                            handleMapFromChange = {this.handleMapFromChange}\r\n                            mapFrom = {this.state.mapFrom}\r\n                            nextStep={() => this.nextStep}\r\n                        />);\r\n\r\n    /*---------------------- PAGE 4 ---------------------------*/ \r\n            case 4:\r\n                return (<SelectTaxonomyToPage \r\n                            previousStep={() => this.previousStep}\r\n                            handleMapToChange = {this.handleMapToChange}\r\n                            mapTo = {this.state.mapTo}\r\n                            nextStep={() => this.nextStep}\r\n                        />);\r\n\r\n    /*---------------------- PAGE 5 ---------------------------*/ \r\n            case 5:\r\n                return (<MapProcessPage \r\n                            previousStep={() => this.previousStep}\r\n                            mapTo = {this.state.mapTo}\r\n                            mapFrom = {this.state.mapFrom}\r\n                            data = {this.state.data}\r\n                            crisisColumnJson = {this.state.crisisColumnJson}\r\n                            nextStep={() => this.nextStep}\r\n                        />);\r\n\r\n    /*---------------------- ERROR PAGE -----------------------*/\r\n            default: \r\n                return (<h1>Error, please check your entries are correct.</h1>);\r\n}\r\n}\r\n\r\n    // ------------------ Rendering \"App\" ------------------------------\r\n\r\n    render() {\r\n        return(\r\n        <div className=\"App\">\r\n            {this.showStep()}\r\n        </div>\r\n        );\r\n}\r\n} //END CLASS APP\r\n\r\n\r\n\r\nexport default App;\r\n","import React, { Component } from 'react';\r\n//import ReactDOM from 'react-dom';\r\nimport Header from '../0_header/Header';\r\nimport '../App.css';\r\nimport config_json from '../taxonomy_maps/config.js';\r\n\r\n\r\n/*--------------------------------------------------------------------------------*/\r\n\r\n/*                         SELECT TAXONOMY FROM PAGE                              */\r\n\r\n/*--------------------------------------------------------------------------------*/\r\n\r\nclass SelectTaxonomyFromPage extends Component {\r\n\r\n    render(){\r\n\r\n        const taxButtons = config_json.map((tax, i) => {\r\n            //console.log(\"taxButtons: \", i, tax.name, this.props);\r\n            return <TaxButtonElement key={i} selectedBtn={this.props.mapFrom} text={tax.name} handleMapChange={this.props.handleMapFromChange} />\r\n        });\r\n\r\n        return (\r\n                <div className=\"flex-page\">\r\n                    <Header />\r\n                    <div className=\"flex-row\">\r\n                        <div>Which taxonomy are you mapping <b>FROM</b>?</div>\r\n                    </div>\r\n                    <div className=\"flex-row\">\r\n                            {taxButtons}\r\n\r\n                    </div> \r\n                    <div className=\"flex-row\">\r\n                        <div>You have currently selected: <b>{this.props.mapFrom}</b></div>\r\n                    </div>\r\n                    <div className=\"flex-row\">\r\n                         <div className=\"NavButton\" onClick={this.props.previousStep()}>Back</div>\r\n                         <div className=\"NavButton\" onClick={this.props.nextStep()}>Next</div>\r\n                    </div>\r\n                </div>\r\n                );\r\n    }\r\n}\r\n\r\n\r\n/*--------------------------------------------------------------------------------*/\r\n\r\n/*                         TAXONOMY BUTTON ELEMENT                                */\r\n\r\n/*--------------------------------------------------------------------------------*/\r\n\r\nexport class TaxButtonElement extends Component {\r\n\r\n    render() {\r\n\r\n        let bgColor = (this.props.selectedBtn === this.props.text) ? 'colorOn': 'colorOff';\r\n        let classNames = 'TaxButton ' + bgColor;\r\n        return (\r\n            <div className={classNames} id={this.props.text} onClick={this.props.handleMapChange}>{this.props.text}</div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default SelectTaxonomyFromPage;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n","import React, { Component } from 'react';\r\n//import ReactDOM from 'react-dom';\r\nimport Header from '../0_header/Header';\r\nimport '../App.css';\r\n\r\nclass UploadPage extends Component {\r\n\t    constructor(props){\r\n        super(props);\r\n\t\tthis.state = {\r\n\t\t\tactive: false\r\n\t\t}\r\n\t\tthis.showText = this.showText.bind(this);\r\n\t}\r\n\r\n    //Makes text field come into focus on page load\r\n    componentDidMount(){\r\n        var input = document.getElementById(\"data_link\");\r\n        if (input !== undefined && input !== null) {\r\n            input.focus();\r\n            input.select();\r\n        }\r\n\r\n    }\r\n\r\n\r\n\tshowText(){\r\n\t\tthis.setState((prevState) => {\r\n\t\t\tlet newState = !prevState.active;\r\n\t\t\treturn {active: newState};\r\n\t\t});\r\n\t}\r\n\r\n    render(){\r\n        return (<div className=\"flex-page\">\r\n\t\t\t\t\t<Header />\r\n\t\t\t\t\t<div className=\"flex-row\">\r\n                        <div>This page will help you convert the disaster terms<br />in your dataset from one taxonomy to another:</div>\r\n                    </div>\r\n\t\t\t\t\t<Instructions active = {this.state.active} handleClick={this.showText} />\r\n\t\t\t\t\t<div className=\"flex-row\">\r\n                        <div>Link to googleSheet you wish to map:</div>\r\n                    </div>\r\n                    <div className=\"flex-row\">\r\n                        <FormInput handleLinkChange={this.props.handleLinkChange} link={this.props.link}/>\r\n                    </div>\r\n                    <div className=\"flex-row\">\r\n                        <div className=\"NavButtonGreyed\">Back</div>\r\n                        <div id=\"loadFile\" className=\"NavButton\" onClick={this.props.nextAndSave} >Next</div>\r\n                    </div>\r\n              </div>);\r\n    }\r\n}\r\n\r\nclass FormInput extends Component {\r\n    render(){\r\n        return (<div className=\"flex-row\">\r\n                    <div className=\"flex-row\">\r\n                        <input type=\"text\" name=\"link\" id=\"data_link\" value={this.props.link} onChange={this.props.handleLinkChange}/>\r\n                    </div>\r\n                </div>);\r\n    }\r\n}\r\n\r\nclass Instructions extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state ={\r\n\t\t\tactive: false\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentWillReceiveProps(nextProps){\r\n\t\tthis.setState({active: nextProps.active});\r\n\t}\r\n\t\r\n\trender(){\r\n\t\treturn (\r\n\t\t<div className=\"flex-row\" onClick={this.props.handleClick}>\r\n\t\t\t<a href=\"#Instructions\" className=\"flex-row\">Show instructions</a>\r\n                <div id=\"instructions\" className={this.state.active ? \"show\" : \"hidden\" }>\r\n\t\t\t\t\t- Paste your data into a googleSheet,\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t- make sure there are <a href=\"http://hxlstandard.org/\">HXL tags</a> in the second row (app won't work otherwise),\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t- make sure your disaster column terms is labelled with the HXL tag \"#crisis+type\",\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t- and make sure your googleSheet is public (top right \"share\" button: \"anyone with link can edit\").\r\n                </div>\r\n        </div>\r\n\t\t\t);\r\n\t}\r\n\r\n}\r\nexport default UploadPage;","import React, { Component } from 'react';\r\n//import ReactDOM from 'react-dom';\r\nimport Header from '../0_header/Header';\r\nimport '../App.css';\r\nimport { TaxButtonElement } from '../3_select_taxonomy_from_page/SelectTaxonomyFromPage';\r\nimport config_json from '../taxonomy_maps/config.js';\r\n\r\n\r\n/*--------------------------------------------------------------------------------*/\r\n\r\n/*                         SELECT TAXONOMY TO PAGE                                */\r\n\r\n/*--------------------------------------------------------------------------------*/\r\n\r\nclass SelectTaxonomyToPage extends Component {\r\n\r\n    render(){\r\n\r\n        const taxButtons = config_json.map((tax, i) => {\r\n            //console.log(\"taxButtons: \", i, tax.name, this.props);\r\n            return <TaxButtonElement key={i} selectedBtn={this.props.mapTo} text={tax.name} handleMapChange={this.props.handleMapToChange} />\r\n        });\r\n\r\n        return (\r\n                <div className=\"flex-page\">\r\n                    <Header />\r\n                    <div className=\"flex-row\">\r\n                        <div>Which taxonomy are you mapping <b>TO</b>?</div>\r\n                    </div>\r\n                    <div className=\"flex-row\">\r\n                            {taxButtons}\r\n                    </div> \r\n                    <div className=\"flex-row\">\r\n                        <div>You have currently selected: <b>{this.props.mapTo}</b></div>\r\n                    </div>\r\n                    <div className=\"flex-row\">\r\n                         <div className=\"NavButton\" onClick={this.props.previousStep()}>Back</div>\r\n                         <div className=\"NavButton\" onClick={this.props.nextStep()}>Next</div>\r\n                    </div>\r\n                </div>\r\n                );\r\n    }\r\n}\r\n\r\nexport default SelectTaxonomyToPage;","import React, { Component } from 'react';\r\n//import ReactDOM from 'react-dom';\r\nimport Header from '../0_header/Header';\r\nimport '../App.css';\r\nimport config_json from '../taxonomy_maps/config.js';\r\nimport { TableRows } from '../2_select_column_page/SelectColumnPage';\r\n\r\n\r\n//---------------------------------------------------------------------------------------\r\n\r\n//---                           MAIN CLASS: DEFINES PAGE                       ---------\r\n\r\n//--------------------------------------------------------------------------------------\r\n\r\n\r\n\r\n\r\nclass MapProcessPage extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            finishedProcessing: 'no',\r\n            currentWordFrom: '',\r\n            currentArrayTo: [],\r\n            newColumn: [],\r\n\t\t\ttaxonomyLevelOfTerm: [],\r\n            dataInNeedOfProcessing: [],\r\n            step: 0\r\n        };\r\n\r\n        this.nextWordHandler = this.nextWordHandler.bind(this);\r\n    }\r\n\r\n\r\n    componentWillMount(){\r\n\r\n\t\t//Changing the array into a key:value pair list\r\n\t\tconst data = this.props.crisisColumnJson;\r\n\t\tlet dataObject = {};\r\n\r\n\t\tdata.forEach(function(c,i){\r\n\t\t\tdataObject[i] = c;\r\n\t\t});\r\n\r\n\t\t//Processing all data\r\n        this.processData(dataObject);\r\n    }\r\n\r\n    //-----------------------------------------------------------------------\r\n    //--------------------- PROCESSING USER CHOICES ------------------------\r\n    //-----------------------------------------------------------------------\r\n\r\n\t//Decides what happens once a user selects one of the choices of words\r\n\r\n    nextWordHandler(event){\r\n        const index = event.target.id.match(/\\d+/g);\r\n        let wordArray = event.target.id.match(/[a-zA-Z]+/g);\r\n\t\tlet word;\r\n\t\tlet taxonomyLevelOfTerm = this.state.taxonomyLevelOfTerm.slice();\r\n\t\tlet tempArray = this.state.newColumn.slice();\r\n\t\tconst taxonomyLevelTo = \"Level \" + this.props.mapTo.substr(this.props.mapTo.length-1);\r\n\r\n\t\twordArray.forEach(function(item,i){\r\n\t\t\tif (i===0){\r\n\t\t\t\tword = item;\r\n\t\t\t} else {\r\n\t\t\t\tword = word.concat(\" \"+item);\r\n\t\t\t}\r\n\t\t})\r\n\r\n        tempArray[index] = word;\r\n\t\ttaxonomyLevelOfTerm[index] = taxonomyLevelTo;\r\n\r\n        this.setState({newColumn: tempArray});\r\n\t\tthis.setState({ taxonomyLevelOfTerm: taxonomyLevelOfTerm });\r\n\r\n        if(this.state.step === this.state.dataInNeedOfProcessing.length-1){\r\n            this.setState({finishedProcessing: 'yes'});\r\n        } else {\r\n            this.setState({step: this.state.step + 1});\r\n\t\t\t\tconsole.log(this.state.step);\r\n        }\r\n\r\n    }\r\n\r\n    //-----------------------------------------------------------------------\r\n    //---------------- DECIDE WHAT TO RENDER ON PAGE ------------------------\r\n    //-----------------------------------------------------------------------\r\n\r\n    showProcessingState() {\r\n\r\n        switch (this.state.finishedProcessing){\r\n\r\n            // ---------- CASE: not finished processing ------------------\r\n            case 'no':\r\n                return (\r\n                    <div className=\"flex-row\">\r\n\t\t\t\t\t\t<div className=\"flex-row\">\r\n\t\t\t\t\t\t\tStep &nbsp;<b>{this.state.step}</b>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<AskUserInput dataInNeedOfProcessing={this.state.dataInNeedOfProcessing} \r\n\t\t\t\t\t\t\t\t\t  data={this.props.data} \r\n\t\t\t\t\t\t\t\t\t  step={this.state.step} \r\n\t\t\t\t\t\t\t\t\t  nextWordHandler={this.nextWordHandler} \r\n\t\t\t\t\t\t/>\r\n                    </div>\r\n                    );\r\n\r\n           // ---------- CASE: done processing ------------------\r\n\r\n            case 'yes':\r\n                return (\r\n                    <div className=\"flex-row\">\r\n                        <div className=\"flex-row\">\r\n                            Success, we have converted all of your data!\r\n                        </div>\r\n                        <div className=\"flex-row\">\r\n                            <table className=\"scrollable-table\">\r\n                                <tbody>\r\n                                    {this.createTable(this.combineArrays(\r\n\t\t\t\t\t\t\t\t\t\tthis.props.data, this.state.newColumn, this.state.taxonomyLevelOfTerm)\r\n\t\t\t\t\t\t\t\t\t)}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                );\r\n\r\n            // ---------- DEFAULT ------------------\r\n\r\n            default: return (\r\n                <div className=\"flex-row\">\r\n                    {this.state.finishedProcessing}\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    //----------------------------------------------------------------------------------\r\n    //---------------- GENERATING NEW DATA AND QUESTIONS TO USER ------------------------\r\n    //----------------------------------------------------------------------------------\r\n\r\n\r\n\t\r\n    processData(data){\r\n        const column = data;\r\n        let dataInNeedOfProcessing = [];\r\n\t\tlet taxonomyLevelTo = this.props.mapTo.substr(this.props.mapTo.length-1);\r\n\t\tlet taxonomyLevelFrom = 1;\r\n\t\tlet dataToCheckInHigherTaxonomy = [];\r\n\t\tlet results = this.searchTermInTaxonomy(taxonomyLevelFrom, \r\n\t\t\t\t\t\t\t\t\t\t\t\ttaxonomyLevelTo, \r\n\t\t\t\t\t\t\t\t\t\t\t\tcolumn, \r\n\t\t\t\t\t\t\t\t\t\t\t\tdataInNeedOfProcessing);\r\n\t\tdataInNeedOfProcessing = results[0];\r\n\t\tdataToCheckInHigherTaxonomy = results[1];\r\n\t//\ttaxonomyLevelTo--;\r\n\r\n\t\twhile(taxonomyLevelTo > 0){\r\n\t\t\tif(dataToCheckInHigherTaxonomy.length!==0){\r\n\t\t\t\tresults = this.searchTermInTaxonomy(taxonomyLevelFrom,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttaxonomyLevelTo,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdataToCheckInHigherTaxonomy, \r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdataInNeedOfProcessing);\r\n\t\t\t\tdataInNeedOfProcessing = results[0];\r\n\t\t\t\tdataToCheckInHigherTaxonomy = results[1];\r\n\t\t\t}\r\n\r\n\t\t\t\ttaxonomyLevelTo--;\r\n\t\t}\r\n\r\n\t\t//While the dataInNeedOfProcessing is not empty, keep processing\r\n\t\tif (dataInNeedOfProcessing.length === 0){\r\n            this.setState({ finishedProcessing: 'yes'});\r\n        } else {\r\n\t\t\tthis.setState({dataInNeedOfProcessing: dataInNeedOfProcessing});\r\n\t\t};\r\n\t\t\r\n    }//End Process data\r\n\r\n\r\n\tsearchTermInTaxonomy(taxonomyLevelFrom, taxonomyLevelTo, data, dataInNeedOfProcessing){\r\n\t\tlet taxonomyLevelOfTerm = this.state.taxonomyLevelOfTerm;\r\n\t\tlet newColumn = this.state.newColumn;\r\n\t\tlet dataToCheckInHigherTaxonomy = {};\r\n\t\tlet mapTo = this.props.mapTo.slice(0, -1) + taxonomyLevelTo;\r\n\t\t\r\n\t\t//Creating taxonomy map\r\n\t\ttax.config(config_json);\r\n\t\tlet taxonomyMap = new tax.createMap(this.props.mapFrom, mapTo);\r\n\r\n\t\t//For each item to be translated\r\n\t\tObject.keys(data).forEach(function(i){\r\n\t\t\tif (i>1) {\r\n\t\t\t\tlet c = data[i];\r\n\t\t\t\tif (taxonomyMap[c] !== undefined && taxonomyMap[c].length !==0){\r\n\t\t\t\t\tif (taxonomyMap[c].length > 1){\r\n\t\t\t\t\t\tdataInNeedOfProcessing.push([c, taxonomyMap[c], i]);\r\n\t\t\t\t\t} else { //if length not > 1 add to array of translated taxonomies\r\n\t\t\t\t\t\tnewColumn[i] = taxonomyMap[c][0] || \" \";\r\n\t\t\t\t\t\ttaxonomyLevelOfTerm[i] = \"Level \" + taxonomyLevelTo;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else { //if it's undefined add empty cell\r\n\t\t\t\t\tdataToCheckInHigherTaxonomy[i] = c;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}); // end for Each\r\n\r\n\t\tthis.setState({ taxonomyLevelOfTerm: taxonomyLevelOfTerm });\r\n\t\tthis.setState({ newColumn: newColumn });\r\n\r\n\t\tlet remainingData = [dataInNeedOfProcessing, dataToCheckInHigherTaxonomy];\r\n\t\treturn remainingData;\r\n\t}\r\n\r\n\r\n    //---------------- FUNCTIONS USED TO CREATE FINAL TABLE ------------------------\r\n\r\n\t// Merges the arrays for the data-to-be-converted, new converted data, \r\n\t// and the level-of-taxonomy-the-converted-data-is-from into one array\r\n\t// to be used to create the final Table using the function createTable below\r\n\r\n\tcombineArrays(data, array2, array3){\r\n\r\n\t\tlet combinedArray = [];\t\r\n\t\tdata.forEach(function(c, i){\r\n\t\t\tif(i===0){\r\n\t\t\t\tarray2[i] = \"Converted Term\";\r\n\t\t\t\tarray3[i] = \"From Taxonomy\";\r\n\t\t\t}\r\n\t\t\tif(i===1){\r\n\t\t\t\tarray2[i] = \"#crisis+type\";\r\n\t\t\t\tarray3[i] = \"#level\";\r\n\t\t\t}\r\n\t\t\tcombinedArray.push(c.concat(array2[i], array3[i])); \r\n\t\t});\r\n\t\treturn combinedArray;\r\n\t}\r\n\r\n\r\n\t// Creates a table from the combined array produced above, \r\n\t// Function works with any number of columns and will put each row into a <tr>\r\n\t// And each element of the array in the row into a <td>\r\n\r\n    createTable(array){\r\n        let finalTable = \r\n\t\t\tarray.map( function(item, j){\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<tr key={j}>\r\n\t\t\t\t\t\t{item.map(function(cell, i){ \r\n\t\t\t\t\t\t\t\treturn <td key={i}>{cell}</td>\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t);\r\n\t\t\t});\r\n        return finalTable;\r\n     }\r\n\r\n\r\n\r\n    //----------------------------- RENDER ------------------------------\r\n\r\n    render(){\r\n        return (<div className=\"flex-page\">\r\n                    <Header />\r\n                        {this.showProcessingState()}\r\n                    <div className=\"flex-row\">\r\n                         <div className=\"NavButton\" onClick={this.props.previousStep()}>Back</div>\r\n                         <div className=\"NavButtonGreyed\">End</div>\r\n                    </div>\r\n                </div>);\r\n    }\r\n}\r\n\r\n\r\n\r\n//---------------------------------------------------------------------------------------\r\n\r\n//---                           TAXONOMY MAPPING FUNCTION                       ---------\r\n\r\n//---------------------------------------------------------------------------------------\r\n\r\n\r\nlet tax = {\r\n\r\n    _config: {},\r\n\r\n    config: function(config_json){\r\n        this._config = config_json;\r\n        return this;\r\n    },\r\n\r\n    //----------------------------- CREATEMAP ------------------------------\r\n\r\n    createMap: function(tax1,tax2){\r\n\r\n        this._tax1 = {};\r\n        this._tax2 = {};\r\n        let parent = this;\r\n        this._dataLoaded = 0;\r\n\r\n        //----------------------------- this.init ------------------------------\r\n\r\n        this.init = function(){\r\n            if(tax._config === null || tax._config === undefined){\r\n                console.log('Error! Load valid config file first!');\r\n                return;\r\n            }\r\n\r\n            tax._config.forEach(function(taxonomy){\r\n                if(taxonomy.name === tax1){\r\n                    parent._tax1 = taxonomy;\r\n                }\r\n                if(taxonomy.name === tax2){\r\n                    parent._tax2 = taxonomy;\r\n                }\r\n            });\r\n\r\n            if(!('name' in this._tax1)){\r\n                console.log('Taxonomy 1 not found');\r\n                return;\r\n            }\r\n\r\n            if(!('name' in this._tax2)){\r\n                console.log('Taxonomy 2 not found');\r\n                return;\r\n            }\r\n\r\n            let tax1Call = this._loadTaxonomy(this._tax1.url);\r\n            let tax2Call = this._loadTaxonomy(this._tax2.url);\r\n\t\t\tconsole.log(this._tax1.group);\r\n\r\n            let map = parent._createMap(tax1Call,tax2Call);\r\n            return map;\r\n\r\n\r\n        }; //end this.init\r\n\r\n        //----------------------------- this.createMap ------------------------------\r\n\r\n        this._createMap = function(map1,map2){\r\n            let map = {};\r\n            for(let subTerm in map1){\r\n                let baseTerms = map1[subTerm];\r\n                let subTerms2 = parent._getSubTermsFromBaseTerms(baseTerms,map2);\r\n                map[subTerm] = subTerms2;\r\n            }\r\n            return map;\r\n        };\r\n\r\n        //----------------------------- this.getSubTermsFromBaseTerms -----------------\r\n\r\n        this._getSubTermsFromBaseTerms = function(baseTerms,map){\r\n            let subTerms = [];\r\n            for(let subTerm2 in map){\r\n                let baseTerms2 = map[subTerm2];\r\n                if(this._compareArrays(baseTerms,baseTerms2) === true){\r\n                    subTerms.push(subTerm2);\r\n                }\r\n            }\r\n            return subTerms;\r\n        };\r\n\r\n        //----------------------------- this.compareArrays ------------------------------\r\n\r\n        this._compareArrays = function (arr1, arr2) {\r\n            return arr2.some(function (v) {\r\n                return arr1.indexOf(v) >= 0;\r\n            });\r\n        };\r\n\r\n        //----------------------------- this.loadTaxonomy ------------------------------\r\n\r\n        this._loadTaxonomy = function(url){\r\n            if (url !== null || url !== undefined) {\r\n                var taxonomyMap = require(\"../\" + url);\r\n                return taxonomyMap;\r\n            } else {\r\n                console.log(\"Error loading taxonomy map, please check url in config file!\");\r\n                return null;\r\n            }\r\n        };\r\n\r\n\r\n        let map = this.init();\r\n        return map;\r\n\r\n    } // END THIS.CREATEMAP\r\n\r\n};\r\n\r\n\r\n\r\n\r\nclass AskUserInput extends Component {\r\n\r\n   constructor(props){\r\n        super(props); //defines this.props\r\n        this.state = {\r\n\t\t\tallDOMElements: []\r\n        };\r\n    }\r\n\r\n\tcomponentWillMount(){\r\n\t\tthis.createList(this.props.dataInNeedOfProcessing, this.props.data, this.props.step); \r\n    }\r\n\r\n\tcomponentWillReceiveProps(nextProps) {\r\n\tthis.createList(this.props.dataInNeedOfProcessing, this.props.data, nextProps.step);\r\n\t}\r\n\r\n\tcreateList(dataInNeedOfProcessing, data, step) {\r\n\t\tlet wordList = [];\r\n        let allDOMElements = dataInNeedOfProcessing.map(function(item, i){\r\n            wordList[i] = {};\r\n\t\t\twordList[i].listOfChoices = item[1].map(function(word, j){ \r\n                const id = word + item[2];\r\n                return(\r\n\t\t\t\t\t<div className=\"button-small\" onClick={this.props.nextWordHandler} key={j} id={id}>{word}</div>\r\n\t\t\t\t\t);\r\n            }, this);\r\n\r\n            //Defining How the table will look like\r\n            wordList[i].dataHeaders = {\"data\": data, \"rowStart\": 0, \"rowEnd\": 1 };\r\n            wordList[i].currentRow = {\"data\": data, \"rowStart\": item[2], \"rowEnd\": item[2]+1 };\r\n\t\t\treturn(\r\n\t\t\t\t<div className=\"flex-row\" key={i} style={{display: step === i ? 'inline' : 'none', transition: 'all 400ms'}}>\r\n\t\t\t\t{this.state.step}\r\n\t\t\t\t\t<DisplayWordThatNeedsInput word = {item[0]} />\r\n\t\t\t\t\t<div className=\"flex-row\">{wordList[i].listOfChoices}</div>\r\n\t\t\t\t\t<div className=\"flex-row\">\r\n\t\t\t\t\t\tThis is a snapshot of the corresponding row:\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"flex-row\">\r\n\t\t\t\t\t\t<table className=\"scrollable-table\" >\r\n\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t< TableRows parameters={wordList[i].dataHeaders} />\r\n\t\t\t\t\t\t\t< TableRows parameters={wordList[i].currentRow} />\r\n\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t</table>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t)\r\n        }, this);\r\n\t\tthis.setState({allDOMElements: allDOMElements});\r\n\r\n\t}\r\n\r\n    render (){\r\n\t\treturn(\r\n\t\t<div>\r\n\t\t\t{this.state.allDOMElements}\r\n\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n\r\nclass DisplayWordThatNeedsInput extends Component {\r\n\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<div className=\"flex-row\">\r\n\t\t\t\t<span>How would you map the following item:&nbsp;</span>\r\n\t\t\t\t<b>{this.props.word}</b>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n\r\n\r\nexport default MapProcessPage;","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nit('renders without crashing', () => {\r\n    const div = document.createElement('div');\r\n    div.setAttribute(\"id\", \"data_link\");\r\n  ReactDOM.render(<App />, div);\r\n});\r\n"],"sourceRoot":""}